{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nelly\\\\Desktop\\\\countdown-timer\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [inputTime, setInputTime] = useState(10); // 用戶輸入的時間\n  const [timeLeft, setTimeLeft] = useState(10); // 倒數時間\n  const [isActive, setIsActive] = useState(false);\n\n  // 每次 timeLeft 改變時更新倒數\n  useEffect(() => {\n    let timer = null;\n    if (isActive && timeLeft > 0) {\n      timer = setInterval(() => {\n        setTimeLeft(prevTime => prevTime - 1);\n      }, 1000);\n    } else if (timeLeft === 0) {\n      setIsActive(false);\n    }\n    return () => clearInterval(timer);\n  }, [isActive, timeLeft]);\n\n  // 開始或暫停倒數\n  const toggleTimer = () => {\n    setIsActive(!isActive);\n  };\n\n  // 重置倒數時間\n  const resetTimer = () => {\n    setTimeLeft(inputTime); // 重置為輸入的時間\n    setIsActive(false);\n  };\n\n  // 當用戶改變輸入框的值時更新 inputTime\n  const handleInputChange = event => {\n    const value = Number(event.target.value);\n    if (!isNaN(value) && value > 0) {\n      // 確保輸入的是正數\n      setInputTime(value);\n      setTimeLeft(value); // 更新倒數時間\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Countdown Timer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Set Countdown Time: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: inputTime,\n        onChange: handleInputChange,\n        disabled: isActive // 倒數進行時禁用輸入框\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"time\",\n      children: [timeLeft, \"s\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleTimer,\n      children: isActive ? 'Pause' : 'Start'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: resetTimer,\n      children: \"Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"nf3UdBAslA0Fjw9geuc6/1tcdPU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","inputTime","setInputTime","timeLeft","setTimeLeft","isActive","setIsActive","timer","setInterval","prevTime","clearInterval","toggleTimer","resetTimer","handleInputChange","event","value","Number","target","isNaN","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","disabled","onClick","_c","$RefreshReg$"],"sources":["C:/Users/nelly/Desktop/countdown-timer/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction App() {\n  const [inputTime, setInputTime] = useState(10); // 用戶輸入的時間\n  const [timeLeft, setTimeLeft] = useState(10);   // 倒數時間\n  const [isActive, setIsActive] = useState(false);\n\n  // 每次 timeLeft 改變時更新倒數\n  useEffect(() => {\n    let timer = null;\n    if (isActive && timeLeft > 0) {\n      timer = setInterval(() => {\n        setTimeLeft((prevTime) => prevTime - 1);\n      }, 1000);\n    } else if (timeLeft === 0) {\n      setIsActive(false);\n    }\n    return () => clearInterval(timer);\n  }, [isActive, timeLeft]);\n\n  // 開始或暫停倒數\n  const toggleTimer = () => {\n    setIsActive(!isActive);\n  };\n\n  // 重置倒數時間\n  const resetTimer = () => {\n    setTimeLeft(inputTime);  // 重置為輸入的時間\n    setIsActive(false);\n  };\n\n  // 當用戶改變輸入框的值時更新 inputTime\n  const handleInputChange = (event) => {\n    const value = Number(event.target.value);\n    if (!isNaN(value) && value > 0) {  // 確保輸入的是正數\n      setInputTime(value);\n      setTimeLeft(value);  // 更新倒數時間\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Countdown Timer</h1>\n      <div>\n        <label>Set Countdown Time: </label>\n        <input \n          type=\"number\" \n          value={inputTime} \n          onChange={handleInputChange} \n          disabled={isActive} // 倒數進行時禁用輸入框\n        />\n      </div>\n      <div className=\"time\">{timeLeft}s</div>\n      <button onClick={toggleTimer}>\n        {isActive ? 'Pause' : 'Start'}\n      </button>\n      <button onClick={resetTimer}>Reset</button>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}